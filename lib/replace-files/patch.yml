- name: Apply patch files to /etc
  hosts: localhost
  become: true
  vars:
    patches:
      - {
          src: patches/etc/conf.d/pacman-contrib.patch,
          dest: /etc/conf.d/pacman-contrib,
        }
      - {
          src: patches/etc/conf.d/wireless-regdom.patch,
          dest: /etc/conf.d/wireless-regdom,
        }
      - {
          src: patches/etc/firewalld/firewalld.conf.patch,
          dest: /etc/firewalld/firewalld.conf,
        }
      - {
          src: patches/etc/firewalld/zones/block.xml.patch,
          dest: /etc/firewalld/zones/block.xml,
        }
      - { src: patches/etc/iwd/main.conf.patch, dest: /etc/iwd/main.conf }
      - { src: patches/etc/logid.cfg.patch, dest: /etc/logid.cfg }
      - { src: patches/etc/ly/config.ini.patch, dest: /etc/ly/config.ini }
      - { src: patches/etc/ly/save.ini.patch, dest: /etc/ly/save.ini }
      - {
          src: patches/etc/makepkg.conf.d/99-parallel.conf.patch,
          dest: /etc/makepkg.conf.d/99-parallel.conf,
        }
      - { src: patches/etc/mkinitcpio.conf.patch, dest: /etc/mkinitcpio.conf }
      - {
          src: patches/etc/modprobe.d/wifi.conf.patch,
          dest: /etc/modprobe.d/wifi.conf,
        }
      - {
          src: patches/etc/NetworkManager/conf.d/dns.conf.patch,
          dest: /etc/NetworkManager/conf.d/dns.conf,
        }
      - { src: patches/etc/nsswitch.conf.patch, dest: /etc/nsswitch.conf }
      - { src: patches/etc/pacman.conf.patch, dest: /etc/pacman.conf }
      - { src: patches/etc/pam.d/login.patch, dest: /etc/pam.d/login }
      - { src: patches/etc/paru.conf.patch, dest: /etc/paru.conf }
      - {
          src: patches/etc/polkit-1/rules.d/10-udisks2-mount.rules.patch,
          dest: /etc/polkit-1/rules.d/10-udisks2-mount.rules,
        }
      - { src: patches/etc/sudoers.d/mysudo.patch, dest: /etc/sudoers.d/mysudo }
  tasks:
    - name: Ensure destination directory exists
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
        mode: "0755"
      loop: "{{ patches }}"

    - name: Ensure target file exists (create empty file if missing)
      copy:
        content: ""
        dest: "{{ item.dest }}"
        force: no
      when: not lookup('ansible.builtin.file', item.dest, errors='ignore')
      loop: "{{ patches }}"

    - name: Apply patch
      command: patch "{{ item.dest }}" "{{ item.src }}"
      args:
        creates: "{{ item.dest }}"
      loop: "{{ patches }}"
